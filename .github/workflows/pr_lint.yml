name: Pull Request Checks

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  pull-requests: read

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    name: Validate PR title and branch
    steps:
      - name: Validate semantic PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            perf
            ci
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
      
      - name: Check branch naming
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          VALID_PREFIXES="^(feature|fix|hotfix|chore|docs|test|refactor)/"
          
          if [[ ! "$BRANCH_NAME" =~ $VALID_PREFIXES ]]; then
            echo "❌ Branch name '$BRANCH_NAME' does not follow naming convention."
            echo "Branch names should start with: feature/, fix/, hotfix/, chore/, docs/, test/, or refactor/"
            exit 1
          fi
          
          echo "✅ Branch name follows naming convention"

  frontend-checks:
    runs-on: ubuntu-latest
    name: Frontend basic checks
    defaults:
      run:
        working-directory: frontend
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: frontend/pnpm-lock.yaml 
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm run setup:github
      - name: Run svelte-check
        run: pnpm run check || echo "Svelte check failed but continuing..."
      - name: Run eslint (non-blocking)
        run: pnpm run lint || echo "ESLint failed but continuing..."

  backend-checks:
    runs-on: ubuntu-latest
    name: Backend basic checks
    defaults:
      run:
        working-directory: backend
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Run basic linting
        run: |
          poetry run flake8 . || echo "Flake8 check failed but continuing..."
          poetry run black --check . || echo "Black check failed but continuing..."
      - name: Run type checking (non-blocking)
        run: poetry run mypy . || echo "MyPy check failed but continuing..."